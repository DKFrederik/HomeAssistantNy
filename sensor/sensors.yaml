#################################################################################################################
#                                                                                                               #
#                                                   Travis                                                      #
#                                                                                                               #
#################################################################################################################
# travis (don't know wich kind of sensor this is... maby binary?)
# - platform: travisci
#   api_key: !secret github_token

#################################################################################################################
#                                                                                                               #
#                                            Installed version                                                  #
#                                                                                                               #
#################################################################################################################
# - platform: command_line
#   name: Current Version
#   command: "cat /config/.HA_VERSION"
#================================

#################################################################################################################
#                                                                                                               #
#                                       Lasetes stable version on github                                        #
#                                                                                                               #
#################################################################################################################
# - platform: version

# - platform: rest
#   resource: https://api.github.com/repos/home-assistant/home-assistant/releases/latest
#   username: !secret github_username
#   password: !secret github_password
#   authentication: basic
#   value_template: '{{ value_json.tag_name }}'
#   headers:
#     Accept: application/vnd.github.v3+json
#     Content-Type: application/json
#     User-Agent: Home Assistant REST sensor
#   name: Lastest Release

#################################################################################################################
#                                                                                                               #
#                                               SYSTEM MONITOR                                                  #
#                                                                                                               #
#################################################################################################################

#https://home-assistant.io/components/sensor.systemmonitor/
# - platform: systemmonitor
#   resources:
#     - type: memory_use_percent
#     - type: processor_use
#     - type: load_1m
#     - type: load_5m
#     - type: load_15m
#     - type: last_boot
#     - type: disk_use_percent
#       arg: /home
#     - type: disk_free
#       arg: /home
#     - type: disk_use
#       arg: /home

#################################################################################################################
#                                                                                                               #
#                                            External IP of Server                                              #
#                                                                                                               #
#################################################################################################################

# - platform: rest
#   resource: https://api.ipify.org?format=json
#   name: External IP
#   value_template: '{{ value_json.ip }}'

#################################################################################################################
#                                                                                                               #
#                                           Internal IP of Server                                               #
#                                                                                                               #
#################################################################################################################
# - platform: command_line
#   name: internal docker ip
#   command: "hostname -i"

#################################################################################################################
#                                                                                                               #
#                     MQTT extracting Wavin current temperatur from all the topics                              #
#                                                                                                               #
#################################################################################################################

- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: lillewcfordørvarmeID
  name: "LilleWCFordoer"
  state_topic: "heat/floor807D3A790941/0/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: bryggersvarmeID
  name: "BryggersVarme"
  state_topic: "heat/floor807D3A790941/1/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: køkkenvarmeID
  name: "KøkkenVarme"
  state_topic: "heat/floor807D3A790941/2/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: storwcvarmeID
  name: "StorWCVarme"
  state_topic: "heat/floor807D3A790941/3/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: gangvarmeID
  name: "GangVarme"
  state_topic: "heat/floor807D3A790941/4/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: tristansvarmeID
  name: "TristansVarme"
  state_topic: "heat/floor807D3A790941/5/current"
  #Added for graph view
  unit_of_measurement: °C


#################################################################################################################
#                                                                                                               #
#                     MQTT extracting Wavin remaning Battery from all the topics                                #
#                                                                                                               #
#################################################################################################################

- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: lillewcfordørvarmeBatteri
  name: "LilleWCFordoerBatteri"
  state_topic: "heat/floor807D3A790941/0/battery"
  #Added for graph view
  unit_of_measurement: "%"
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: bryggersvarmeBatteri
  name: "BryggersVarmeBatteri"
  state_topic: "heat/floor807D3A790941/1/battery"
  #Added for graph view
  unit_of_measurement: "%"
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: køkkenvarmeBatteri
  name: "KøkkenVarmeBatteri"
  state_topic: "heat/floor807D3A790941/2/battery"
  #Added for graph view
  unit_of_measurement: "%"
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: storwcvarmeBatteri
  name: "StorWCVarmeBatteri"
  state_topic: "heat/floor807D3A790941/3/battery"
  #Added for graph view
  unit_of_measurement: "%"
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: gangvarmeBatteri
  name: "GangVarmeBatteri"
  state_topic: "heat/floor807D3A790941/4/battery"
  #Added for graph view
  unit_of_measurement: "%"
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: tristansvarmeBatteri
  name: "TristansVarmeBatteri"
  state_topic: "heat/floor807D3A790941/5/battery"
  #Added for graph view
  unit_of_measurement: "%"

###############################################################################################################################
#                                                                                                                             #
#                                             RaspBerry Pi 3b+ (Phoscon)                                                      #
#                                                                                                                             #
###############################################################################################################################


###############################################################################################################################
#    check temperature on Phoscon Raspberry pi3b+                                                                             #
#                                                                                                                             #
#    Remember to ssh-keygen and ssh-copy-id from server to Phoscon from within the virtual enviroment (venv)                  #
#                                                                                                                             #
#                                                                                                                             #
#    Create the homeassistant user on the second RPI, sudo adduser homeassistant                                              #
#                                                                                                                             #
#    I generated RSA keys, and copied them from HA to the second RPI, was using this                                          #
#    site, http://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id     #
#    If i didn’t do this step is asked for password when i try to log on to the Second RPI from HA.                           #
#                                                                                                                             #
#    Added this to my sensor.yaml on HA:                                                                                      #
#                                                                                                                             #
#  - platform: command_line                                                                                                   #
#    name: Phoscon CPU Temperature                                                                                            #
#    command: ssh "Second RPI IP" "cat /sys/class/thermal/thermal_zone0/temp"                                                 #
#    unit_of_measurement: "°C"                                                                                                #
#    value_template: '{{ value | multiply(0.001) }}'                                                                          #
#                                                                                                                             #
###############################################################################################################################
# - platform: command_line
#   name: Phoscon CPU Temperature
#   command: ssh pi@192.168.3.10 /bin/cat /sys/class/thermal/thermal_zone0/temp
#   #command: ssh "homeassistant@192.168.3.10" “/bin/cat /sys/class/thermal/thermal_zone0/temp”
#   unit_of_measurement: "°C"
#   value_template: '{{ value | multiply(0.001) }}'

#################################################################################################################
#     First, make sure you can ssh into the remote server without password:                                     #
#     create a script with the correct username and ip-adress                                                   #
#                                                                                                               #
#     eg. pico chechPhosconDiskUsage.sh                                                                         #
#     Then paste this text:                                                                                     #
#                                                                                                               #
#     #!/bin/sh                                                                                                 #
#     ssh homeassistant@192.168.3.10 "df -lh --output=used / | tail -n 1 | sed 's/,//g'"                        #
#                                                                                                               #   
#     This shows the number WITH a comma ","                                                                    #
#     ssh homeassistant@192.168.3.10 "df -lh --output=used / | tail -n 1 | sed ''"                              #
#                                                                                                               #
#     Then go to sed to remove the "G" to show only the numbered value,                                         #
#     then put in unit_of_measurement: and value_template in this funcktion                                     #
#                                                                                                               #
#     make it executable: chmod 755                                                                             #
#                                                                                                               #
#################################################################################################################
# - platform: command_line
#   name: Phoscon disk usage
#   unit_of_measurement: "GiB"
#   value_template: '{{ value | multiply(0.001) }}'
#   command: ssh homeassistant@192.168.3.10 "df -lh --output=used / | tail -n 1 | sed ''"

#################################################################################################################
#     First, make sure you can ssh into the remote server without password:                                     #
#     create a script with the correct username and ip-adress                                                   #
#                                                                                                               #
#     eg. pico chechPhosconDiskFree.sh                                                                          #
#     Then paste this text:                                                                                     #
#                                                                                                               #
#     #!/bin/sh                                                                                                 #
#     ssh homeassistant@192.168.3.10 "df -lh --output=avail / | tail -n 1 | sed 's/,//g'"                       #
#                                                                                                               #
#     This shows the number WITH a comma ","                                                                    #
#     ssh homeassistant@192.168.3.10 "df -lh --output=avail / | tail -n 1 | sed ''"                             #
#                                                                                                               #
#     Then go to sed to remove the "G" to show only the numbered value,                                         #
#     then put in unit_of_measurement: and value_template in this funcktion                                     #
#                                                                                                               #
#     make it executable: chmod 755                                                                             #
#                                                                                                               #
#################################################################################################################

# - platform: command_line
#   name: Phoscon disk free
#   command: "/config/www/scripts/checkPhosconDiskFree.sh"
#   #command: ssh homeassistant@192.168.3.10 "df -lh --output=avail / | tail -n 1 | sed ''"
#   unit_of_measurement: "GiB"
#   value_template: '{{ value }}'

#################################################################################################################
#                                                                                                               #
#       #!/bin/sh                                                                                               #
#       ssh homeassistant@192.168.3.10 uptime | grep -ohe 'up .*' | sed 's/,//g' | awk '{ print $2 }'           #
#                                                                                                               #
#       First ssh into Raspberry pi 3b+ (phoscon)                                                               #
#       Then take the output of uptime to grep, only show matching characters (-oh) and do regex (-e).          #
#       Filter on "up" "space" "everything after that".                                                         #
#       Then go to sed to remove the comma's "4 days," to "4 days",                                             #
#       and then with awk print the second collumn, and remove the rest of the output.                          #
#                                                                                                               #
#################################################################################################################

# - platform: command_line
#   name: Phoscon Uptime
#   # command: "/home/homeassistant/checkUptime.sh"
#   command: homeassistant@kodipi “/bin/cat /sys/class/thermal/thermal_zone0/temp”
#   unit_of_measurement: ""
#   value_template: '{{ value | multiply(0.001) }}'

#################################################################################################################
#                                                                                                               #
#                                             Vaskemaskine Denne findes ikke mere                               #
#                                                                                                               #
#################################################################################################################

# - platform: template
#   sensors: 
#     vaskemaskine_tid_tilbage:
#       value_template: '{{ states.sensor.vaskemaskine.attributes.remain_time }}'
#       icon_template: >-
#           {% if is_state('sun.sun', 'above_horizon') %}
#             mdi:timelapse
#           {% else %}
#             mdi:timelapse
#           {% endif %}

# - platform: template
#   sensors: 
#     vaskemaskine_hvad_laver_den:
#       value_template: '{{ states.sensor.vaskemaskine.attributes.run_state }}'
#       icon_template: >-
#           {% if is_state('sun.sun', 'above_horizon') %}
#             mdi:form-select
#           {% else %}
#             mdi:form-select
#           {% endif %}

# - platform: template
#   sensors: 
#     vaskemaskine_oprindelig_tid:
#       value_template: '{{ states.sensor.vaskemaskine.attributes.initial_time }}'
#       icon_template: >-
#           {% if is_state('sun.sun', 'above_horizon') %}
#             mdi:timelapse
#           {% else %}
#             mdi:timelapse
#           {% endif %}

# - platform: template
#   sensors: 
#     vaskemaskine_boernelaas:
#       value_template: '{{ states.sensor.vaskemaskine.attributes.child_lock }}'
#       icon_template: >-
#           {% if is_state('sun.sun', 'above_horizon') %}
#             mdi:lock-open-outline
#           {% else %}
#             mdi:lock-open-outline
#           {% endif %}

# - platform: template
#   sensors: 
#     vaskemaskine_boernelaas:
#       value_template: '{{ states.sensor.vaskemaskine.attributes.childlock_mode }}'
#       icon_template: >-
#           {% if is_state('sun.sun', 'above_horizon') %}
#             mdi:lock-open-outline
#           {% else %}
#             mdi:lock-open-outline
#           {% endif %}

# - platform: template
#   sensors: 
#     vaskemaskine_program:
#       value_template: '{{ states.sensor.vaskemaskine.attributes.current_course }}'
#       icon_template: >-
#           {% if is_state('sun.sun', 'above_horizon') %}
#             mdi:form-select
#           {% else %}
#             mdi:form-select
#           {% endif %} 

#################################################################################################################
#                                                                                                               #
#                                              Weather                                                          #
#                                                                                                               #
#################################################################################################################

# - platform: template
#   sensors:
#     weather_temperature:
#       unit_of_measurement: 'degrees'
#       value_template: "{{ state_attr('weather.aeblevangen', 'temperature') }}"

#################################################################################################################
#                                                                                                               #
#                                           Eloverblik                                                          #
#                                    Take the date from the sensor                                              #
#                                                                                                               #
#################################################################################################################

- platform: template
  sensors:
    eloverblikdato:
      friendly_name: "Eloverblikdato"
      unit_of_measurement: 'date'
      value_template: "{{ state_attr('sensor.eloverblik_energy_total', 'Metering date') }}"

- platform: template
  sensors:
    koekkenvarmesensor:
      friendly_name: "koekkenvarmesensor"
      unit_of_measurement: 'degrees'
      value_template: "{{ state_attr('climate.floor807d3a790941_0_climate', 'temperature') }}"


#################################################################################################################
#                                                                                                               #
#                                              Mercedes                                                         #
#                                      E 220 d stationcar S213                                                  #
#                                                                                                               #
#################################################################################################################

## this yaml file creates seperate sensors in HA for the attributes derrived from the Benz sensors. Credits to Rene Nulsch for 
## creating this awesome MercedesMe integration!
## I am not a programmer, this is all derrived from everywhere around the forum, re-use of images, inspiration and code.
## For me, having a splitted Home Assistant config I created this yaml file, named it mercedessensor.yaml and placed it in 
## my sensors directory within home assistant
## I guess it can be part of your configuration file as well..... 


- platform: template
  sensors:
    car_tire_pressure_rear_left:
      friendly_name: Tire pressure Rear Left
      value_template: '{{ states.binary_sensor.dh10126_tire_warning.attributes.tirepressureRearLeft }}'
    car_tire_pressure_rear_right:
      friendly_name: Tire pressure Rear Right
      value_template: '{{ states.binary_sensor.dh10126_tire_warning.attributes.tirepressureRearRight }}'
    car_tire_pressure_front_left:
      friendly_name: Tire pressure Front Left
      value_template: '{{ states.binary_sensor.dh10126_tire_warning.attributes.tirepressureFrontLeft }}'
    car_tire_pressure_front_right:
      friendly_name: Tire pressure Front Right
      value_template: '{{ states.binary_sensor.dh10126_tire_warning.attributes.tirepressureFrontRight }}'

    car_vin:
      friendly_name: VIN Number
      value_template: '{{ states.sensor.dh10126_car.attributes.vin }}'

    car_lock_front_right:
      friendly_name: Lock Front Right
      value_template: >-
        {% if is_state_attr('sensor.dh10126_lock', 'doorlockstatusfrontright', false)%}
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('sensor.dh10126_lock', 'doorlockstatusfrontright', false)%}
          mdi:lock-outline
        {% else %} 
          mdi:lock-open-variant-outline
        {% endif %}

    car_lock_front_left:
      friendly_name: Lock Front Left
      value_template: >-
        {% if is_state_attr('sensor.dh10126_lock', 'doorlockstatusfrontleft', false)%}
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('sensor.dh10126_lock', 'doorlockstatusfrontleft', false)%}
          mdi:lock-outline
        {% else %} 
          mdi:lock-open-variant-outline
        {% endif %}

    car_lock_rear_right:
      friendly_name: Lock Rear Right
      value_template: >-
        {% if is_state_attr('sensor.dh10126_lock', 'doorlockstatusrearright', false)%}
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('sensor.dh10126_lock', 'doorlockstatusrearright', false)%}
          mdi:lock-outline
        {% else %} 
          mdi:lock-open-variant-outline
        {% endif %}

    car_lock_rear_left:
      friendly_name: Lock Rear Left
      value_template: >-
        {% if is_state_attr('sensor.dh10126_lock', 'doorlockstatusrearleft', false)%}
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('sensor.dh10126_lock', 'doorlockstatusrearleft', false)%}
          mdi:lock-outline
        {% else %} 
          mdi:lock-open-variant-outline
        {% endif %}

    car_lock_trunk:
      friendly_name: Lock trunk
      value_template: >-
        {% if is_state_attr('sensor.dh10126_lock', 'decklidstatus', false)%} 
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('sensor.dh10126_lock', 'decklidstatus', false)%} 
          mdi:lock-outline
        {% else %}
          mdi:lock-open-variant-outline
        {% endif %}

    car_lock_hood:
      friendly_name: Lock hood
      value_template: >-
        {% if is_state_attr('sensor.dh10126_lock', 'hoodStateRollup', false)%} 
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('sensor.dh10126_lock', 'hoodStateRollup', false)%} 
          mdi:lock-outline
        {% else %}
          mdi:lock-open-variant-outline
        {% endif %}

    car_window_front_left:
      friendly_name: Window Front Left
      value_template: >-
        {% if is_state_attr('binary_sensor.dh10126_windows_closed', 'windowstatusfrontleft', '2')%} 
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('binary_sensor.dh10126_windows_closed', 'windowstatusfrontleft', '2')%} 
          mdi:window-closed
        {% else %}
          mdi:window-open
        {% endif %}

    car_window_front_right:
      friendly_name: Window Front Right
      value_template: >-
        {% if is_state_attr('binary_sensor.dh10126_windows_closed', 'windowstatusfrontright', '2')%} 
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('binary_sensor.dh10126_windows_closed', 'windowstatusfrontright', '2')%} 
          mdi:window-closed
        {% else %}
          mdi:window-open
        {% endif %}

    car_window_rear_left:
      friendly_name: Window Rear Left
      value_template: >-
        {% if is_state_attr('binary_sensor.dh10126_windows_closed', 'windowstatusrearleft', '2')%} 
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('binary_sensor.dh10126_windows_closed', 'windowstatusrearleft', '2')%} 
          mdi:window-closed
        {% else %}
          mdi:window-open
        {% endif %}

    car_window_rear_right:
      friendly_name: Window Rear Right
      value_template: >-
        {% if is_state_attr('binary_sensor.dh10126_windows_closed', 'windowstatusrearright', '2')%} 
            Closed
        {% else %}
            Open
        {% endif %}
      icon_template: >
        {% if is_state_attr('binary_sensor.dh10126_windows_closed', 'windowstatusrearright', '2')%} 
          mdi:window-closed
        {% else %}
          mdi:window-open
        {% endif %}
        
    car_window_sunroof:
        friendly_name: Window Sunroof
        value_template: >-
          {% if is_state_attr('sensor.dh10126_lock', 'sunroofstatus', '0')%} 
            Closed
          {% else %}
            Open
          {% endif %}
        icon_template: >
          {% if is_state_attr('sensor.dh10126_lock', 'sunroofstatus', '0')%} 
            mdi:checkbox-blank-circle-outline
          {% else %}
            mdi:checkbox-marked-circle-outline
          {% endif %}

    weather_temperature:
      friendly_name: Temperature Outside
      value_template: '{{ states.weather.aeblevangen_36.attributes.temperature }}'
      unit_of_measurement: °C
      unique_id: xxxx1